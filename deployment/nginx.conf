# Nginx 配置檔案用於 Activity Tracker Bot
# 用於反向代理和靜態檔案服務

# 主要配置
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 事件配置
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP 配置
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日誌格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log main;

    # 基本設定
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # 壓縮設定
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 限制請求大小
    client_max_body_size 10M;
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;

    # 安全設定
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # 限制連接數
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;

    # 上游服務器配置
    upstream activity_tracker_bot {
        server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
        # 如果有多個實例，可以添加更多服務器
        # server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }

    # 主服務器配置
    server {
        listen 80;
        server_name your-domain.com www.your-domain.com;

        # 重定向到 HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS 服務器配置
    server {
        listen 443 ssl http2;
        server_name your-domain.com www.your-domain.com;

        # SSL 配置
        ssl_certificate /etc/ssl/certs/your-domain.com.crt;
        ssl_certificate_key /etc/ssl/private/your-domain.com.key;
        
        # SSL 安全設定
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;

        # 根目錄
        root /var/www/activity-tracker-bot/public;
        index index.html index.htm;

        # 連接限制
        limit_conn conn_limit_per_ip 10;
        limit_req zone=req_limit_per_ip burst=10 nodelay;

        # API 代理
        location /api/ {
            proxy_pass http://activity_tracker_bot;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # 超時設定
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 緩衝設定
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # 健康檢查端點
        location /health {
            proxy_pass http://activity_tracker_bot;
            access_log off;
        }

        # 統計檔案服務
        location /statistics/ {
            alias /var/www/activity-tracker-bot/statistics/;
            
            # 安全設定
            internal;  # 只允許內部訪問
            
            # 快取設定
            expires 1h;
            add_header Cache-Control "public, no-transform";
            
            # 自動索引
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }

        # 靜態檔案
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # 防止訪問敏感檔案
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ /\.(env|git|svn) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 錯誤頁面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # 日誌配置
        access_log /var/log/nginx/activity-tracker-bot.access.log main;
        error_log /var/log/nginx/activity-tracker-bot.error.log warn;
    }

    # 管理面板配置（可選）
    server {
        listen 443 ssl http2;
        server_name admin.your-domain.com;

        # SSL 配置（使用相同證書或專用證書）
        ssl_certificate /etc/ssl/certs/your-domain.com.crt;
        ssl_certificate_key /etc/ssl/private/your-domain.com.key;

        # 基本認證
        auth_basic "Activity Tracker Admin";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # 只允許特定 IP
        allow 192.168.1.0/24;
        allow 10.0.0.0/8;
        deny all;

        # 代理到監控服務
        location / {
            proxy_pass http://127.0.0.1:3001;  # Grafana
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Prometheus
        location /prometheus/ {
            proxy_pass http://127.0.0.1:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # 負載均衡配置（多實例部署）
    upstream activity_tracker_cluster {
        least_conn;
        
        server 127.0.0.1:3000 weight=3 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:3001 weight=3 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:3002 weight=2 max_fails=3 fail_timeout=30s backup;
        
        keepalive 32;
    }

    # 開發環境配置
    server {
        listen 8080;
        server_name dev.your-domain.com localhost;

        location / {
            proxy_pass http://127.0.0.1:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # 開發工具
        location /dev/ {
            proxy_pass http://127.0.0.1:3001/;
        }
    }
}